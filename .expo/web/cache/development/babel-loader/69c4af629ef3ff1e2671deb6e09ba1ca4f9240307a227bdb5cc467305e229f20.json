{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nexport var fetchData = createAsyncThunk('counter/fetchData', _asyncToGenerator(function* () {\n  var response = yield fetch('https://www.dbooks.org/api/recent');\n  var data = yield response.json();\n  console.log(data);\n  return data;\n}));\nvar counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    counter: 0,\n    books: []\n  },\n  reducers: {\n    increment: function increment(state) {\n      state.counter += 1;\n    },\n    decrement: function decrement(state) {\n      state.counter -= 1;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    builder.addCase(fetchData.fulfilled, function (state, action) {\n      for (var book of action.payload.books) {\n        console.log(book);\n        state.books.push(book);\n      }\n    });\n  }\n});\nvar _counterSlice$actions = counterSlice.actions,\n  increment = _counterSlice$actions.increment,\n  decrement = _counterSlice$actions.decrement;\nexport { increment, decrement };\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","fetchData","_asyncToGenerator","response","fetch","data","json","console","log","counterSlice","name","initialState","counter","books","reducers","increment","state","decrement","extraReducers","builder","addCase","fulfilled","action","book","payload","push","_counterSlice$actions","actions","reducer"],"sources":["C:/Users/Некит/Desktop/native/AwesomeProject/redux/slice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\n\r\nexport const fetchData = createAsyncThunk(\r\n    'counter/fetchData', // имя слайса/имя редьюсера\r\n    async () => {\r\n        const response = await fetch('https://www.dbooks.org/api/recent');\r\n        const data = await response.json();\r\n        console.log(data);\r\n        return data;\r\n    }\r\n);\r\n\r\nconst counterSlice = createSlice({\r\n    name: 'counter',\r\n    initialState: {\r\n        counter: 0,\r\n        books: []\r\n    },\r\n    reducers: {\r\n        increment: (state) => {state.counter += 1},\r\n        decrement: (state) => {state.counter -= 1},\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder.addCase(fetchData.fulfilled, (state, action) => {\r\n            for (let book of action.payload.books) {\r\n                console.log(book)\r\n                state.books.push(book)\r\n            }\r\n        })\r\n    }\r\n});\r\n\r\nexport const { increment, decrement } = counterSlice.actions; // Экспорт actions\r\nexport default counterSlice.reducer; // Reducer'ы слайса"],"mappings":";AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAEhE,OAAO,IAAMC,SAAS,GAAGD,gBAAgB,CACrC,mBAAmB,EAAAE,iBAAA,CACnB,aAAY;EACR,IAAMC,QAAQ,SAASC,KAAK,CAAC,mCAAmC,CAAC;EACjE,IAAMC,IAAI,SAASF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClCC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,OAAOA,IAAI;AACf,CAAC,CACL,CAAC;AAED,IAAMI,YAAY,GAAGV,WAAW,CAAC;EAC7BW,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACVC,OAAO,EAAE,CAAC;IACVC,KAAK,EAAE;EACX,CAAC;EACDC,QAAQ,EAAE;IACNC,SAAS,EAAE,SAAAA,UAACC,KAAK,EAAK;MAACA,KAAK,CAACJ,OAAO,IAAI,CAAC;IAAA,CAAC;IAC1CK,SAAS,EAAE,SAAAA,UAACD,KAAK,EAAK;MAACA,KAAK,CAACJ,OAAO,IAAI,CAAC;IAAA;EAC7C,CAAC;EACDM,aAAa,EAAE,SAAAA,cAACC,OAAO,EAAK;IACxBA,OAAO,CAACC,OAAO,CAACnB,SAAS,CAACoB,SAAS,EAAE,UAACL,KAAK,EAAEM,MAAM,EAAK;MACpD,KAAK,IAAIC,IAAI,IAAID,MAAM,CAACE,OAAO,CAACX,KAAK,EAAE;QACnCN,OAAO,CAACC,GAAG,CAACe,IAAI,CAAC;QACjBP,KAAK,CAACH,KAAK,CAACY,IAAI,CAACF,IAAI,CAAC;MAC1B;IACJ,CAAC,CAAC;EACN;AACJ,CAAC,CAAC;AAEK,IAAAG,qBAAA,GAAiCjB,YAAY,CAACkB,OAAO;EAA7CZ,SAAS,GAAAW,qBAAA,CAATX,SAAS;EAAEE,SAAS,GAAAS,qBAAA,CAATT,SAAS;AAA0B,SAAAF,SAAA,EAAAE,SAAA;AAC7D,eAAeR,YAAY,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}