{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { GestureDetector, Gesture } from \"react-native-gesture-handler\";\nimport Animated, { useAnimatedStyle, useSharedValue, withTiming } from \"react-native-reanimated\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar START_POSITION = -50;\nvar END_POSITION = 50;\nvar Block = function Block(_ref) {\n  var _ref$circleColor = _ref.circleColor,\n    circleColor = _ref$circleColor === void 0 ? '#0000FF70' : _ref$circleColor;\n  var onLeft = useSharedValue(true);\n  var onTop = useSharedValue(true);\n  var positionX = useSharedValue(0);\n  var positionY = useSharedValue(0);\n  var _useState = useState(10),\n    _useState2 = _slicedToArray(_useState, 2),\n    counter = _useState2[0],\n    setCounter = _useState2[1];\n  var _useState3 = useState({\n      color: 'grey'\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    minuscolor = _useState4[0],\n    setMinusColor = _useState4[1];\n  var dispatch = useDispatch();\n  var pan = Gesture.Pan().onUpdate(function (e) {\n    if (onLeft.value) {\n      positionX.value = e.translationX / 4;\n    } else {\n      positionX.value = e.translationX / 4;\n    }\n  }).onEnd(function (e) {\n    console.log(e);\n    if (positionX.value > END_POSITION / 2) {\n      positionX.value = withTiming(0, {\n        duration: 200\n      });\n      onLeft.value = false;\n      onTop.value = false;\n      setCounter(counter + 1);\n      setMinusColor({\n        color: 'black'\n      });\n    } else {\n      positionX.value = withTiming(0, {\n        duration: 200\n      });\n      onLeft.value = false;\n      onTop.value = false;\n      if (counter != 0 && positionX.value <= 0) {\n        setCounter(counter - 1);\n        console.log(counter);\n        dispatch(fetchData(counter - 1));\n        if (counter == 1) {\n          setMinusColor({\n            color: '#00000070'\n          });\n        }\n      } else if (counter == 0) {\n        setMinusColor({\n          color: '#00000070'\n        });\n      }\n    }\n  });\n  var animatedStyle = useAnimatedStyle(function () {\n    return {\n      transform: [{\n        translateX: positionX.value\n      }]\n    };\n  });\n  return _jsx(_Fragment, {\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        flexDirection: 'row',\n        backgroundColor: '#00000050',\n        borderRadius: 50,\n        height: 64,\n        maxHeight: 64\n      },\n      children: [_jsx(Text, {\n        style: [{\n          paddingHorizontal: 10,\n          fontSize: 40,\n          minWidth: 50\n        }, minuscolor],\n        children: \"-\"\n      }), _jsx(GestureDetector, {\n        gesture: pan,\n        children: _jsx(Animated.View, {\n          style: [{\n            backgroundColor: circleColor,\n            width: 64,\n            height: 64,\n            alignContent: 'center',\n            alignItems: 'center',\n            borderRadius: 50\n          }, animatedStyle],\n          children: _jsx(Animated.Text, {\n            style: {\n              fontSize: 40,\n              color: 'white'\n            },\n            children: counter\n          })\n        })\n      }), _jsx(Text, {\n        style: {\n          paddingHorizontal: 10,\n          fontSize: 40,\n          minWidth: 50\n        },\n        children: \"+\"\n      })]\n    })\n  });\n};\nexport default Block;","map":{"version":3,"names":["GestureDetector","Gesture","Animated","useAnimatedStyle","useSharedValue","withTiming","useSelector","useDispatch","useState","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","START_POSITION","END_POSITION","Block","_ref","_ref$circleColor","circleColor","onLeft","onTop","positionX","positionY","_useState","_useState2","_slicedToArray","counter","setCounter","_useState3","color","_useState4","minuscolor","setMinusColor","dispatch","pan","Pan","onUpdate","e","value","translationX","onEnd","console","log","duration","fetchData","animatedStyle","transform","translateX","children","View","style","flex","flexDirection","backgroundColor","borderRadius","height","maxHeight","Text","paddingHorizontal","fontSize","minWidth","gesture","width","alignContent","alignItems"],"sources":["C:/Users/Некит/Desktop/native/AwesomeProject/components/Block.js"],"sourcesContent":["import { Pressable, Text, View } from \"react-native\";\r\nimport { GestureDetector, Gesture } from \"react-native-gesture-handler\";\r\nimport Animated, { useAnimatedStyle, useSharedValue, withTiming } from \"react-native-reanimated\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState } from \"react\";\r\n// import { fetchData } from \"../redux/apiSlice\";\r\n\r\n\r\nconst START_POSITION = -50;\r\nconst END_POSITION = 50;\r\n\r\nconst Block = ( { circleColor = '#0000FF70' } ) => {\r\n\r\n    const onLeft = useSharedValue(true);\r\n    const onTop = useSharedValue(true);\r\n    const positionX = useSharedValue(0);\r\n    const positionY = useSharedValue(0);\r\n    // const user = useSelector((state) => state.api.api);\r\n    const [counter, setCounter] = useState(10);\r\n    const [minuscolor, setMinusColor] = useState({\r\n        color: 'grey'\r\n    })\r\n    const dispatch = useDispatch();\r\n\r\n    const pan = Gesture.Pan()\r\n        .onUpdate((e) => {\r\n            // if (onTop.value) {\r\n            //     positionY.value = e.translationY / 6;\r\n            // } else {\r\n            //     positionY.value = e.translationY / 6;\r\n            // }\r\n\r\n            // Отслежмваем движение по горизонтали\r\n            if (onLeft.value) {\r\n                positionX.value = e.translationX / 4;\r\n            } else {\r\n                positionX.value = e.translationX / 4;\r\n            }\r\n            \r\n        })\r\n        .onEnd((e) => {\r\n            console.log(e)\r\n            if (positionX.value > END_POSITION / 2) {\r\n                positionX.value = withTiming(0, {duration: 200});\r\n                onLeft.value = false;\r\n                onTop.value = false;\r\n                setCounter( counter + 1 );\r\n                // dispatch(fetchData(counter + 1));\r\n                setMinusColor({\r\n                    color: 'black'\r\n                })\r\n\r\n                // console.log(counter);\r\n            } else {\r\n                positionX.value = withTiming(0, { duration: 200 });\r\n                onLeft.value = false;\r\n                onTop.value = false;\r\n                if (counter != 0 && positionX.value <= 0) {\r\n                    setCounter( counter - 1 );\r\n                    console.log(counter)\r\n                    dispatch(fetchData(counter - 1));\r\n                    if (counter == 1) {\r\n                        setMinusColor({\r\n                            color: '#00000070'\r\n                        })\r\n                    }\r\n                } else if (counter == 0) {\r\n                    setMinusColor({\r\n                        color: '#00000070'\r\n                    })\r\n                }\r\n            }\r\n        });\r\n\r\n    const animatedStyle = useAnimatedStyle(() => ({\r\n        transform: [{ translateX: positionX.value}],\r\n    }));\r\n\r\n    return (\r\n        <>\r\n            <View style={ { flex: 1, flexDirection: 'row', backgroundColor: '#00000050', borderRadius: 50, height: 64, maxHeight: 64 } }>\r\n                <Text style={[{paddingHorizontal: 10, fontSize: 40, minWidth: 50}, minuscolor]}>-</Text>\r\n                <GestureDetector gesture={pan}>\r\n                <Animated.View style={ [{backgroundColor: circleColor, width: 64, height: 64, alignContent: 'center', alignItems: 'center', borderRadius: 50}, animatedStyle] } >\r\n                    <Animated.Text  style={{fontSize: 40, color: 'white'}}>{ counter }</Animated.Text>\r\n                </Animated.View>\r\n                </GestureDetector>\r\n                <Text style={{paddingHorizontal: 10, fontSize: 40, minWidth: 50}}>+</Text>\r\n                {/* <Pressable onPress={ () => { console.log(user) } }><Text>{ user.username }</Text></Pressable> */}\r\n            </View>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Block;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}